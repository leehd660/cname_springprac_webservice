<!--<!DOCTYPE HTML>-->
<!--<html>-->
<!--<head>-->
<!--    <title>스프링 부트 웹서비스</title>-->
<!--    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8" />-->
<!--</head>-->
<!--<body>-->
<!--    <h1>스프링 부트로 시작하는 웹 서비스</h1>-->
<!--&lt;!&ndash;간단하게 h1 크기로 "스프링부트로 시작하는 웹 서비스"를 출력하는 페이지&ndash;&gt;-->
<!--</body>-->
<!--</html>-->

<!--기존의 코드를 변경함. 이유 : 라이브러리를 비롯한 기타 HTML 태그들이 모두 레이아웃에 추가되기 때문에 index.mustache에는 필요한 코드만 남김-->

{{>layout/header}}
<!--위의 중괄호2개 사이의 '>'의 의미는 현재 머스테치 파일을 기준으로 다른 파일을 가져온다는 의미-->
<!--여기서는 index.mustache파일에서 layout/header와 layout/footer 파일을 가져온다는 뜻-->

<h1>스프링 부트로 시작하는 웹 서비스</h1>

{{>layout/footer}}

{{>layout/header}}

    <h1>스프링 부트로 시작하는 웹 서비스 Ver .2</h1>
    <div class="col-md-12">
        <div class="row">
            <div class="col-md-6">
                <a href="/posts/save" role="button" class="btn btn-primary">글 등록</a>
<!--                <a>태그를 이용해 글 등록 페이지로 이동하는 글 등록 버튼 생성, 이동한 페이지의 주소는 href인 '/posts/save'임-->
                {{#userName}}
<!--                    머스테치는 다른 언어와 같은 if문 제공 X -> true/false 여부만 판단-->
<!--                    그래서 머스테치에서는 항상 최종값을 넘겨줘야 함. userName이 있다면 userName을 노출시키도록 구성-->
                    Logged in as: <span id="user">{{userName}}</span>
                    <a href="/logout" class="btn btn-info active" role="button">Logout</a>
<!--                    a href="/logout" : 스프링 시큐리티에서 기본적으로 제공하는 로그아웃 URL-->
<!--                    즉, 개발자가 별도로 저 URL에 해당하는 컨트롤러를 만들 필요 X. SecurityConfig 클래스에서 URL을 변경할 순 있지만 기본 URL을 사용해도 충분하니 여기서는 그대로 사용-->
                {{/userName}}
                {{^userName}}
<!--                    머스테치에서 해당값이 존재하지 않는 경우에는 ^를 사용/ 여기서는 userName이 없으면 로그인 버튼을 노출시키도록 구성함-->
                    <a href="/oauth2/authorization/google"
                       class="btn btn-success active" role="button">Google Login</a>
                {{/userName}}
            </div>
        </div>
        <br>
<!--        목록 출력 영역-->
        <table class="table tavle-horizontal table-bordered">
            <thread class="thead-strong">
            <tr>
                <th>게시글번호</th>
                <th>제목</th>
                <th>작성자</th>
                <th>최종수정일</th>
            </tr>
            </thread>
            <tbody id="tbody">
            {{#posts}}
<!--            posts라는 List를 순회함, JAVA의 for문과 동일하게 생각하면 됨-->
                <tr>
                    <td>{{id}}</td>
<!--                    중복되는 중괄호 안의 변수명 들 : List에서 뽑아낸 객체들의 필드를 사용함-->
                    <td><a href="/posts/update/{{id}}">{{title}}</a></td>
<!--                    타이틀title에 a tag를 추가함 > 타이틀을 클릭하면 해달 게시글의 수정화면으로 이동함.-->
                    <td>{{author}}</td>
                    <td>{{modifiedDate}}</td>
                </tr>
            {{/posts}}
            </tbody>
        </table>
    </div>

{{>layout/footer}}